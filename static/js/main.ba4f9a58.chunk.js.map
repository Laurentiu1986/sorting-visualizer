{"version":3,"sources":["algorithms/bubbleSort.js","algorithms/mergeSort.js","components/Visualizer.js","App.js","index.js"],"names":["bubbleSort","unsortedArr","console","log","swap","animations","arr","n","length","x","i","temp","push","mergeSortHelper","mainArr","left","right","aux","middle","Math","floor","k","j","merge","mergeSort","slice","styles","root","flexGrow","box","backgroundColor","marginTop","paddingTop","position","minHeight","width","paper","margin","PrettoSlider","withStyles","color","height","thumb","border","marginLeft","boxShadow","active","valueLabel","track","borderRadius","rail","Slider","DEFAULT_COLOR","SUCCESS_COLOR","BubbleSort","props","state","randoms","ANIMATION_TIMEOUT","BAR_NUMBER","generateArray","values","Array","from","random","resetArray","setState","this","forceUpdate","a","bubbleSortAlgorithm","arrayBars","document","getElementsByClassName","indexStart","indexEnd","newHeight","oldHeight","barOneStyle","style","barTwoStyle","setTimeout","setBarsColor","sleep","then","resetBarsColor","mergeSortAlgorithm","barOne","barTwo","ms","Promise","resolve","bind","Grid","container","spacing","item","xs","Button","variant","onClick","valueLabelDisplay","aria-label","defaultValue","min","max","onChange","e","value","Paper","justify","map","index","bottom","className","Component","App","Visualizer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba4f9a58.chunk.js","sourcesContent":["const bubbleSort = (unsortedArr) => {\r\n        console.log(\"bubble sort executing...\");\r\n        var animations = [];\r\n\r\n        var arr = unsortedArr;\r\n        var swap;\r\n        var n = arr.length - 1;\r\n        var x = arr;\r\n\r\n        do {\r\n            swap = false;\r\n            arr = unsortedArr;\r\n\r\n            for (var i = 0; i < n; i++) {\r\n                if (x[i] > x[i + 1]) {\r\n                    var temp = x[i];\r\n                    x[i] = x[i + 1];\r\n                    x[i + 1] = temp;\r\n                    swap = true;\r\n                    animations.push([i, i+1, true, x[i], x[i+1]])\r\n                } else {\r\n                    animations.push([i, i+1, false, -1, -1])\r\n                }\r\n            }\r\n            n--;\r\n        } while (swap);\r\n\r\n        console.log(animations);\r\n\r\n        return animations;\r\n}\r\n\r\nexport default bubbleSort;","const mergeSort = (arr) => {\r\n    const animations = [];\r\n    if (arr.length <= 1) return arr;\r\n\r\n    const aux = arr.slice();\r\n    console.log(\"unsorted arr\", arr);\r\n    mergeSortHelper(arr, 0, arr.length - 1, aux, animations);\r\n    console.log(\"sorted arr\", arr);\r\n    return animations;\r\n}\r\n\r\nfunction mergeSortHelper(mainArr, left, right, aux, animations) {\r\n\r\n    if (left === right) return;\r\n\r\n    const middle = Math.floor((left + right) / 2);\r\n\r\n    mergeSortHelper(aux, left, middle, mainArr, animations);\r\n    mergeSortHelper(aux, middle + 1, right, mainArr, animations);\r\n    merge(mainArr, left, middle, right, aux, animations);\r\n\r\n}\r\n\r\nfunction merge(mainArr, left, middle, right, aux, animations) {\r\n\r\n    let k = left;\r\n    let i = left;\r\n    let j = middle + 1;\r\n\r\n    while (i <= middle && j <= right) {\r\n        animations.push([i, j, false, -1, -1]);\r\n        if (aux[i] <= aux[j]) {\r\n            animations.push([k, j, true, aux[i], aux[k]]);\r\n            mainArr[k++] = aux[i++];\r\n        } else {\r\n            animations.push([k, j, true, aux[j], aux[k]]);\r\n            mainArr[k++] = aux[j++];\r\n        }\r\n    }\r\n\r\n    while (i <= middle) {\r\n        if (j === mainArr.length)\r\n            animations.push([k, i - 1, true, aux[i], aux[k]]);\r\n        else\r\n            animations.push([k, i, true, aux[i], aux[k]]);\r\n        mainArr[k++] = aux[i++];\r\n    }\r\n    while (j <= right) {\r\n        if (j === mainArr.length)\r\n            animations.push([k, j - 1, true, aux[j], aux[k]]);\r\n        else\r\n            animations.push([k, j, true, aux[j], aux[k]]);\r\n        mainArr[k++] = aux[j++];\r\n    }\r\n}\r\n\r\n\r\n export default mergeSort;\r\n","import React, { Component } from 'react'\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Button,\r\n    Chip,\r\n    Slider\r\n} from '@material-ui/core';\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport bubbleSortAlgorithm from '../algorithms/bubbleSort';\r\nimport mergeSortAlgorithm from '../algorithms/mergeSort';\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    box: {\r\n        backgroundColor: '#4da9da',\r\n        marginTop: 150,\r\n        paddingTop: 30,\r\n        position: 'relative',\r\n        minHeight: 600,\r\n        width: 'calc(100%)'\r\n    },\r\n    paper: {\r\n        backgroundColor: '#1976d2',\r\n        // height: 140,\r\n        width: 10,\r\n        margin: 3\r\n    }\r\n}\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n        color: '#52af77',\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid currentColor',\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n})(Slider);\r\n\r\nconst DEFAULT_COLOR = '#1976d2';\r\nconst SUCCESS_COLOR = 'green';\r\nconst FAIL_COLOR = 'red';\r\n\r\nclass BubbleSort extends Component {\r\n\r\n    state = {\r\n        randoms: [],\r\n        ANIMATION_TIMEOUT: 5,\r\n        BAR_NUMBER: 50\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.generateArray = this.generateArray.bind(this);\r\n        // this.generateArray();\r\n    }\r\n\r\n    generateArray = () => {\r\n        var values = Array.from({ length: this.state.BAR_NUMBER }, () => Math.floor(Math.random() * 200));\r\n        this.resetArray();\r\n        this.setState({ randoms: values }, function () {\r\n            console.log(this.state.randoms);\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n\r\n    resetArray = () => {\r\n        console.log(\"reset\");\r\n        this.setState({ randoms: [] });\r\n    }\r\n\r\n    bubbleSort = async () => {\r\n        var animations = bubbleSortAlgorithm(this.state.randoms);\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [indexStart, indexEnd, swap, newHeight, oldHeight] = animations[i];\r\n            const barOneStyle = arrayBars[indexStart].style;\r\n            const barTwoStyle = arrayBars[indexEnd].style;\r\n\r\n            if (!swap) {\r\n                setTimeout(() => {\r\n                    this.setBarsColor(barOneStyle, barTwoStyle, FAIL_COLOR);\r\n                }, this.state.ANIMATION_TIMEOUT);\r\n                await this.sleep(this.state.ANIMATION_TIMEOUT * 2).then(() => {  })\r\n                this.resetBarsColor(barOneStyle, barTwoStyle);\r\n            } else {\r\n                setTimeout(() => {\r\n                    this.setBarsColor(barOneStyle, barTwoStyle, SUCCESS_COLOR);\r\n                    barOneStyle.height = `${newHeight * 3}px`;\r\n                    barTwoStyle.height = `${oldHeight * 3}px`;\r\n                }, this.state.ANIMATION_TIMEOUT);\r\n                await this.sleep(this.state.ANIMATION_TIMEOUT * 2).then(() => {  })\r\n                this.resetBarsColor(barOneStyle, barTwoStyle);\r\n            }\r\n        }\r\n    }\r\n\r\n    mergeSort = async () => {\r\n        var animations = mergeSortAlgorithm(this.state.randoms);\r\n        console.log(animations);\r\n        console.log(animations.length);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [indexStart, indexEnd, swap, newHeight, oldHeight] = animations[i];\r\n            console.log(\"=== \", animations[i]);\r\n            const barOneStyle = arrayBars[indexStart].style;\r\n            // const barTwoStyle = arrayBars[indexEnd].style;\r\n            const barTwoStyle = null;\r\n\r\n            if (!swap) {\r\n                setTimeout(() => {\r\n                    this.setBarsColor(barOneStyle, barTwoStyle, FAIL_COLOR);\r\n                }, this.state.ANIMATION_TIMEOUT);\r\n                await this.sleep(this.state.ANIMATION_TIMEOUT * 2).then(() => {  })\r\n                this.resetBarsColor(barOneStyle, barTwoStyle);\r\n            } else {\r\n                setTimeout(() => {\r\n                    this.setBarsColor(barOneStyle, barTwoStyle, SUCCESS_COLOR);\r\n                    barOneStyle.height = `${newHeight * 3}px`;\r\n                    // barTwoStyle.height = `${oldHeight * 3}px`;\r\n                }, this.state.ANIMATION_TIMEOUT);\r\n                await this.sleep(this.state.ANIMATION_TIMEOUT * 2).then(() => {  })\r\n                this.resetBarsColor(barOneStyle, barTwoStyle);\r\n            }\r\n        }\r\n    }\r\n\r\n    setBarsColor = (barOne, barTwo, color) => {\r\n        if(barOne) barOne.backgroundColor = color;\r\n        if(barTwo) barTwo.backgroundColor = color;\r\n    }\r\n\r\n    resetBarsColor = (barOne, barTwo) => {\r\n        if(barOne) barOne.backgroundColor = DEFAULT_COLOR;\r\n        if(barTwo) barTwo.backgroundColor = DEFAULT_COLOR;\r\n    }\r\n\r\n    sleep = (ms) => {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container style={styles.root} spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => { this.generateArray() }}>\r\n                        Initialize Array\r\n                    </Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.bubbleSort}>\r\n                        Bubble Sort\r\n                    </Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.mergeSort}>\r\n                        Merge Sort\r\n                    </Button>\r\n                    <br></br>\r\n                    Bars: <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20} style={{ width: 250 }} min={5} max={100} onChange={(e, value) => this.setState({ BAR_NUMBER: value })} />\r\n                    <br></br>\r\n                    Animation speed: <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={5} style={{ width: 250 }} min={1} max={2000} onChange={(e, value) => this.setState({ ANIMATION_TIMEOUT: value })} />\r\n                    <Paper style={styles.box} >\r\n                        <Grid container justify=\"center\" spacing={2}>\r\n                            {this.state.randoms.map((value, index) => (\r\n                                <Grid key={index} item style={{ margin: 1 }}>\r\n                                    <Paper style={{ height: value * 3, backgroundColor: '#1976d2', width: 10, margin: 3, position: 'absolute', bottom: 0 }} key={index} className=\"array-bar\" />\r\n                                    {/* <Chip variant=\"outlined\" size=\"small\" label={value} style={{ backgroundColor: '#1976d2' }} /> */}\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default BubbleSort\r\n\r\n","import './App.css';\nimport Visualizer from \"./components/Visualizer\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}