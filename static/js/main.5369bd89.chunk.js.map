{"version":3,"sources":["algorithms/bubbleSort.js","algorithms/mergeSort.js","components/Sidebar.js","components/Visualizer.js","App.js","index.js"],"names":["bubbleSort","unsortedArr","console","log","swap","animations","arr","n","length","x","i","temp","push","mergeSortHelper","mainArr","left","right","aux","middle","Math","floor","k","j","merge","mergeSort","slice","Sidebar","width","height","children","className","style","minHeight","backgroundColor","Fragment","styles","root","flexGrow","color","overflow","box","marginTop","paddingTop","position","paper","margin","PrettoSlider","withStyles","thumb","border","marginLeft","boxShadow","active","valueLabel","track","borderRadius","rail","Slider","DEFAULT_COLOR","SUCCESS_COLOR","BubbleSort","props","state","randoms","ANIMATION_TIMEOUT","BAR_NUMBER","ARRAY_SCENARIO","generateArray","values","Array","from","random","resetArray","setState","this","a","bubbleSortAlgorithm","arrayBars","document","getElementsByClassName","indexStart","indexEnd","newHeight","oldHeight","barOneStyle","barTwoStyle","setTimeout","setBarsColor","sleep","then","resetBarsColor","mergeSortAlgorithm","barOne","barTwo","ms","Promise","resolve","bind","Grid","container","item","xs","justify","spacing","Paper","variant","square","Button","onClick","map","value","index","bottom","Typography","gutterBottom","valueLabelDisplay","aria-label","defaultValue","min","max","onChange","e","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5369bd89.chunk.js","sourcesContent":["const bubbleSort = (unsortedArr) => {\r\n        console.log(\"bubble sort executing...\");\r\n        var animations = [];\r\n\r\n        var arr = unsortedArr;\r\n        var swap;\r\n        var n = arr.length - 1;\r\n        var x = arr;\r\n\r\n        do {\r\n            swap = false;\r\n            arr = unsortedArr;\r\n\r\n            for (var i = 0; i < n; i++) {\r\n                if (x[i] > x[i + 1]) {\r\n                    var temp = x[i];\r\n                    x[i] = x[i + 1];\r\n                    x[i + 1] = temp;\r\n                    swap = true;\r\n                    animations.push([i, i+1, true, x[i], x[i+1]])\r\n                } else {\r\n                    animations.push([i, i+1, false, -1, -1])\r\n                }\r\n            }\r\n            n--;\r\n        } while (swap);\r\n\r\n        console.log(animations);\r\n\r\n        return animations;\r\n}\r\n\r\nexport default bubbleSort;","const mergeSort = (arr) => {\r\n    const animations = [];\r\n    if (arr.length <= 1) return arr;\r\n\r\n    const aux = arr.slice();\r\n    console.log(\"unsorted arr\", arr);\r\n    mergeSortHelper(arr, 0, arr.length - 1, aux, animations);\r\n    console.log(\"sorted arr\", arr);\r\n    return animations;\r\n}\r\n\r\nfunction mergeSortHelper(mainArr, left, right, aux, animations) {\r\n\r\n    if (left === right) return;\r\n\r\n    const middle = Math.floor((left + right) / 2);\r\n\r\n    mergeSortHelper(aux, left, middle, mainArr, animations);\r\n    mergeSortHelper(aux, middle + 1, right, mainArr, animations);\r\n    merge(mainArr, left, middle, right, aux, animations);\r\n\r\n}\r\n\r\nfunction merge(mainArr, left, middle, right, aux, animations) {\r\n\r\n    let k = left;\r\n    let i = left;\r\n    let j = middle + 1;\r\n\r\n    while (i <= middle && j <= right) {\r\n        animations.push([i, j, false, -1, -1]);\r\n        if (aux[i] <= aux[j]) {\r\n            animations.push([k, j, true, aux[i], aux[k]]);\r\n            mainArr[k++] = aux[i++];\r\n        } else {\r\n            animations.push([k, j, true, aux[j], aux[k]]);\r\n            mainArr[k++] = aux[j++];\r\n        }\r\n    }\r\n\r\n    while (i <= middle) {\r\n        if (j === mainArr.length)\r\n            animations.push([k, i - 1, true, aux[i], aux[k]]);\r\n        else\r\n            animations.push([k, i, true, aux[i], aux[k]]);\r\n        mainArr[k++] = aux[i++];\r\n    }\r\n    while (j <= right) {\r\n        if (j === mainArr.length)\r\n            animations.push([k, j - 1, true, aux[j], aux[k]]);\r\n        else\r\n            animations.push([k, j, true, aux[j], aux[k]]);\r\n        mainArr[k++] = aux[j++];\r\n    }\r\n}\r\n\r\n\r\n export default mergeSort;\r\n","import React from \"react\";\r\nimport \"../styles/Sidebar.css\"\r\n\r\nexport const Sidebar = ({ width, height, children }) => {\r\n\r\n    return (\r\n        <>\r\n          <div className=\"side-bar\" style={{ width: width, minHeight: height, backgroundColor:'#01263D'}}>\r\n              <React.Fragment>{children}</React.Fragment>\r\n          </div>\r\n        </>\r\n    );\r\n};","import \"../styles/Visualizer.css\"\r\n\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Button,\r\n    Chip,\r\n    Slider,\r\n    Typography,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel\r\n} from '@material-ui/core';\r\n// import MenuIcon from '@material-ui/icons';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport bubbleSortAlgorithm from '../algorithms/bubbleSort';\r\nimport mergeSortAlgorithm from '../algorithms/mergeSort';\r\n\r\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        backgroundColor: '#03324E',\r\n        color: 'white',\r\n        overflow: 'hidden'\r\n    },\r\n    box: {\r\n        backgroundColor: '#4da9da',\r\n        marginTop: 150,\r\n        paddingTop: 30,\r\n        position: 'relative',\r\n        minHeight: 600,\r\n        width: 'calc(100%)'\r\n    },\r\n    paper: {\r\n        backgroundColor: '#1976d2',\r\n        // height: 140,\r\n        width: 10,\r\n        margin: 3\r\n    }\r\n}\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n        color: '#01263D',\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid currentColor',\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n})(Slider);\r\n\r\nconst DEFAULT_COLOR = 'rgb(3, 50, 78)';\r\nconst SUCCESS_COLOR = 'green';\r\nconst FAIL_COLOR = 'red';\r\nconst MIN_RANGE = 10;\r\nconst MAX_RANGE = 10;\r\n\r\nclass BubbleSort extends Component {\r\n\r\n    state = {\r\n        randoms: [],\r\n        ANIMATION_TIMEOUT: 5,\r\n        BAR_NUMBER: 20,\r\n        width: 10,\r\n        ARRAY_SCENARIO: 'random'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.generateArray = this.generateArray.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateArray();\r\n    }\r\n\r\n    generateArray = () => {\r\n        var values = Array.from({ length: this.state.BAR_NUMBER }, () => Math.floor(Math.random() * 200) + MIN_RANGE);\r\n        this.resetArray();\r\n        this.setState({ randoms: values }, function () {\r\n            console.log(this.state.randoms);\r\n        });\r\n        // this.forceUpdate();\r\n    }\r\n\r\n    resetArray = () => {\r\n        console.log(\"reset\");\r\n        this.setState({ randoms: [] });\r\n    }\r\n\r\n    bubbleSort = async () => {\r\n        var animations = bubbleSortAlgorithm(this.state.randoms);\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [indexStart, indexEnd, swap, newHeight, oldHeight] = animations[i];\r\n            const barOneStyle = arrayBars[indexStart].style;\r\n            const barTwoStyle = arrayBars[indexEnd].style;\r\n\r\n            if (!swap) {\r\n                setTimeout(() => {\r\n                    this.setBarsColor(barOneStyle, barTwoStyle, FAIL_COLOR);\r\n                }, this.state.ANIMATION_TIMEOUT);\r\n                await this.sleep(this.state.ANIMATION_TIMEOUT * 2).then(() => { })\r\n                this.resetBarsColor(barOneStyle, barTwoStyle);\r\n            } else {\r\n                setTimeout(() => {\r\n                    this.setBarsColor(barOneStyle, barTwoStyle, SUCCESS_COLOR);\r\n                    barOneStyle.height = `${newHeight * 2}px`;\r\n                    barTwoStyle.height = `${oldHeight * 2}px`;\r\n                }, this.state.ANIMATION_TIMEOUT);\r\n                await this.sleep(this.state.ANIMATION_TIMEOUT * 2).then(() => { })\r\n                this.resetBarsColor(barOneStyle, barTwoStyle);\r\n            }\r\n        }\r\n    }\r\n\r\n    mergeSort = async () => {\r\n        var animations = mergeSortAlgorithm(this.state.randoms);\r\n        console.log(animations);\r\n        console.log(animations.length);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [indexStart, indexEnd, swap, newHeight, oldHeight] = animations[i];\r\n            console.log(\"=== \", animations[i]);\r\n            const barOneStyle = arrayBars[indexStart].style;\r\n            // const barTwoStyle = arrayBars[indexEnd].style;\r\n            let barTwoStyle = null;\r\n\r\n            if (!swap) {\r\n                barTwoStyle = arrayBars[indexEnd].style;\r\n                setTimeout(() => {\r\n                    this.setBarsColor(barOneStyle, barTwoStyle, FAIL_COLOR);\r\n                }, this.state.ANIMATION_TIMEOUT);\r\n                await this.sleep(this.state.ANIMATION_TIMEOUT * 2).then(() => { })\r\n                this.resetBarsColor(barOneStyle, barTwoStyle);\r\n            } else {\r\n                setTimeout(() => {\r\n                    this.setBarsColor(barOneStyle, barTwoStyle, SUCCESS_COLOR);\r\n                    barOneStyle.height = `${newHeight * 2}px`;\r\n                    // barTwoStyle.height = `${oldHeight * 3}px`;\r\n                }, this.state.ANIMATION_TIMEOUT);\r\n                await this.sleep(this.state.ANIMATION_TIMEOUT * 2).then(() => { })\r\n                this.resetBarsColor(barOneStyle, barTwoStyle);\r\n            }\r\n        }\r\n    }\r\n\r\n    setBarsColor = (barOne, barTwo, color) => {\r\n        if (barOne) barOne.backgroundColor = color;\r\n        if (barTwo) barTwo.backgroundColor = color;\r\n    }\r\n\r\n    resetBarsColor = (barOne, barTwo) => {\r\n        if (barOne) barOne.backgroundColor = DEFAULT_COLOR;\r\n        if (barTwo) barTwo.backgroundColor = DEFAULT_COLOR;\r\n    }\r\n\r\n    sleep = (ms) => {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container style={styles.root}>\r\n                <Grid item xs={2}>\r\n                    <Grid container justify=\"left\" spacing={2}>\r\n                        <Sidebar width={300} height={\"100vh\"}>\r\n                            <Paper className=\"paper-logo\" variant=\"outlined\" square />\r\n                            <Button className=\"btn primary-color\" variant=\"outlined\" onClick={() => { this.generateArray() }}>\r\n                                Initialize Array\r\n                            </Button>\r\n                            <Button className=\"btn primary-color\" variant=\"outlined\" onClick={this.bubbleSort}>\r\n                                Bubble Sort\r\n                            </Button>\r\n                            <Button className=\"btn primary-color\" variant=\"outlined\" onClick={this.mergeSort}>\r\n                                Merge Sort\r\n                            </Button>\r\n                        </Sidebar>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={10}>\r\n                    <Grid container justify=\"left\" spacing={2}>\r\n                        <Grid className=\"title first primary-color\" item xs={2}\r\n                            justify=\"left\">\r\n                        </Grid>\r\n                        <Grid className=\"title primary-color\" item xs={7}\r\n                            justify=\"left\">\r\n                        </Grid>\r\n                        <Grid className=\"title primary-color\" item xs={2}\r\n                            justify=\"left\">\r\n                        </Grid>\r\n                        <Grid className=\"generated-arrays primary-color\" item xs={7} >\r\n                            <Grid container justify=\"center\" spacing={2}>\r\n                                {this.state.randoms.map((value, index) => (\r\n                                    <Grid key={index} item style={{ margin: Math.floor(150 / this.state.BAR_NUMBER) }}>\r\n                                        <Paper style={{ height: value * 2, backgroundColor: 'rgb(3, 50, 78)', width: 300 / this.state.BAR_NUMBER, margin: 1, position: 'absolute', bottom: 0 }} key={index} className=\"array-bar\">\r\n                                            {/* <Typography className=\"bar-value\">{value}</Typography> */}\r\n                                        </Paper>\r\n                                        {/* <Chip variant=\"outlined\" size=\"small\" label={value} style={{ backgroundColor: '#1976d2' }} /> */}\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid className=\"generated-arrays primary-color\" item xs={4} >\r\n                            <Grid container justify=\"center\">\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid className=\"bottom-controls bottom-first\" item xs={3}\r\n                            justify=\"left\">\r\n                            <Typography className=\"label\" gutterBottom>Bars number: {this.state.BAR_NUMBER}</Typography>\r\n                            <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20} style={{ width: 'calc(60%)' }} min={5} max={40} onChange={(e, value) => {\r\n                                this.setState({ BAR_NUMBER: value });\r\n                                this.generateArray();\r\n                            }} />\r\n                        </Grid>\r\n                        <Grid className=\"bottom-controls\" item xs={3}\r\n                            justify=\"left\">\r\n                            <Typography className=\"label\" gutterBottom>Animation speed: {this.state.ANIMATION_TIMEOUT}</Typography>\r\n                            <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={5} style={{ width: 'calc(60%)' }} min={10} max={1000} onChange={(e, value) => this.setState({ ANIMATION_TIMEOUT: value })} />\r\n                        </Grid>\r\n                        <Grid className=\"bottom-controls\" item xs={3}\r\n                            justify=\"left\">\r\n                            {/* <FormControl className=\"case-container\" component=\"fieldset\">\r\n                                <FormLabel className=\"case-scenario label\" component=\"legend\">Array Case Scenario</FormLabel>\r\n                                <RadioGroup aria-label=\"best\" name=\"gender1\" value={this.state.ARRAY_SCENARIO} onChange={(e, value) => this.setState({ ARRAY_SCENARIO: value })}>\r\n                                    <FormControlLabel  value=\"best\" control={<Radio className=\"label\"/>} label=\"Best Case\" />\r\n                                    <FormControlLabel className=\"label\" value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                    <FormControlLabel className=\"label\" value=\"worst\" control={<Radio />} label=\"Worst Case\" />\r\n                                </RadioGroup>\r\n                            </FormControl> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                {/* <Grid item xs={12}>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={() => { this.generateArray() }}>\r\n                        Initialize Array\r\n                    </Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.bubbleSort}>\r\n                        Bubble Sort\r\n                    </Button>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.mergeSort}>\r\n                        Merge Sort\r\n                    </Button>\r\n                    <br></br>\r\n                    Bars: <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20} style={{ width: 250 }} min={5} max={100} onChange={(e, value) => this.setState({ BAR_NUMBER: value })} />\r\n                    <br></br>\r\n                    Animation speed: <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={5} style={{ width: 250 }} min={1} max={2000} onChange={(e, value) => this.setState({ ANIMATION_TIMEOUT: value })} />\r\n                    <Grid container justify=\"center\" spacing={2}>\r\n                        {this.state.randoms.map((value, index) => (\r\n                            <Grid key={index} item style={{ margin: 1 }}>\r\n                                <Paper style={{ height: value * 3, backgroundColor: '#1976d2', width: 10, margin: 3, position: 'absolute', bottom: 0 }} key={index} className=\"array-bar\" /> */}\r\n                {/* <Chip variant=\"outlined\" size=\"small\" label={value} style={{ backgroundColor: '#1976d2' }} /> */}\r\n                {/* </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid> */}\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default BubbleSort\r\n\r\n","import './App.css';\nimport Visualizer from \"./components/Visualizer\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}